{"version":3,"sources":["ios.js"],"names":["UrlUtils","constructManifestUrlAsync","process","cwd","address","hostType","localAddress","log","withTimestamp","Simulator","openUrlInSimulatorSafeAsync","success","msg","qr","generate","chalk","green","qrCode","underline","cyan","red","exit","startSimulatorAndPrintInfo","Config","validation","reactNativeVersionWarnings","developerTool","offline","command","isPlatformSupported","yellow","packager","run"],"mappings":";;;;;;;;;;AAoCA;;sFACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwBA,cAASC,yBAAT,CAAmCC,QAAQC,GAAR,EAAnC,CADxB;;AAAA;AACQC,mBADR;AAAA;AAAA,mBAE6BJ,cAASC,yBAAT,CAAmCC,QAAQC,GAAR,EAAnC,EAAkD;AAC3EE,wBAAU;AADiE,aAAlD,CAF7B;;AAAA;AAEQC,wBAFR;;;AAMEC,0BAAIC,aAAJ,CAAkB,uBAAlB;AANF;AAAA,mBAOiCC,eAAUC,2BAAV,CAAsCJ,YAAtC,CAPjC;;AAAA;AAAA;AAOUK,mBAPV,SAOUA,OAPV;AAOmBC,eAPnB,SAOmBA,GAPnB;;;AASE,gBAAID,OAAJ,EAAa;AACXE,uCAAGC,QAAH,CAAYV,OAAZ,EAAqB,kBAAU;AAC7BG,8BAAIC,aAAJ,MAAqBO,gBAAMC,KAAN,CAAY,mBAAZ,CAArB;AACA,oLAKJ,4BAAOC,MAAP,EAAe,CAAf,CALI,sEASFF,gBAAMG,SAAN,CAAgBH,gBAAMI,IAAN,CAAWf,OAAX,CAAhB,CATE,oIAY4CW,gBAAMG,SAAN,CAAgBH,gBAAMI,IAAN,CAAW,iBAAX,CAAhB,CAZ5C;AAmBD,eArBD;AAsBD,aAvBD,MAuBO;AACLZ,4BAAIC,aAAJ,CACKO,gBAAMK,GAAN,CAAU,4BAAV,CADL,YAGFR,GAHE,YAKFG,gBAAMK,GAAN,CAAU,YAAV,CALE;AAOAlB,sBAAQmB,IAAR,CAAa,CAAb;AACD;;AAzCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,0B;;;;;AAnCf;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAEA;;;;;;AAEAC,YAAOC,UAAP,CAAkBC,0BAAlB,GAA+C,KAA/C;;AACAF,YAAOG,aAAP,GAAuB,MAAvB;AACAH,YAAOI,OAAP,GAAiB,IAAjB;;AAEA,IAAMC,UAAkB,iBAAQ1B,QAAQC,GAAR,EAAR,IAAyB,SAAzB,GAAqC,KAA7D;;AAEA,IAAI,CAACM,eAAUoB,mBAAV,EAAL,EAAsC;AACpC,qBACEd,gBAAMK,GAAN,CACE,0FADF,CADF;AAKA,qBACEL,gBAAMe,MAAN,kBACkBf,gBAAMI,IAAN,CAAWS,UAAU,QAArB,CADlB,0DADF;AAKA1B,UAAQmB,IAAR,CAAa,CAAb;AACD;;AAEDU,mBAASC,GAAT,CAAaV,0BAAb","file":"ios.js","sourcesContent":["// @flow\n\nimport { Config, ProjectSettings, Simulator, UrlUtils } from 'xdl';\n\nimport chalk from 'chalk';\nimport indent from 'indent-string';\nimport path from 'path';\nimport pathExists from 'path-exists';\nimport qr from 'qrcode-terminal';\nimport log from '../util/log';\nimport { hasYarn } from '../util/pm';\n\nimport packager from '../util/packager';\n\nConfig.validation.reactNativeVersionWarnings = false;\nConfig.developerTool = 'crna';\nConfig.offline = true;\n\nconst command: string = hasYarn(process.cwd()) ? 'yarnpkg' : 'npm';\n\nif (!Simulator.isPlatformSupported()) {\n  log(\n    chalk.red(\n      '\\nThis command only works on macOS computers with Xcode and the iOS simulator installed.'\n    )\n  );\n  log(\n    chalk.yellow(\n      `If you run \\`${chalk.cyan(command + ' start')}\\` then you can view your app on a physical device.\\n`\n    )\n  );\n  process.exit(1);\n}\n\npackager.run(startSimulatorAndPrintInfo);\n\n// print a nicely formatted message with setup information\nasync function startSimulatorAndPrintInfo() {\n  const address = await UrlUtils.constructManifestUrlAsync(process.cwd());\n  const localAddress = await UrlUtils.constructManifestUrlAsync(process.cwd(), {\n    hostType: 'localhost',\n  });\n\n  log.withTimestamp('Starting simulator...');\n  const { success, msg } = await Simulator.openUrlInSimulatorSafeAsync(localAddress);\n\n  if (success) {\n    qr.generate(address, qrCode => {\n      log.withTimestamp(`${chalk.green('Packager started!')}`);\n      log(\n        `\nTo view your app with live reloading, point the Expo app to this QR code.\nYou'll find the QR scanner on the Projects tab of the app.\n\n${indent(qrCode, 2)}\n\nOr enter this address in the Expo app's search bar:\n\n  ${chalk.underline(chalk.cyan(address))}\n\nYour phone will need to be on the same local network as this computer.\nFor links to install the Expo app, please visit ${chalk.underline(chalk.cyan('https://expo.io'))}.\n\nLogs from serving your app will appear here. Press Ctrl+C at any time to stop.\n\nIf you restart the simulator or change the simulated hardware, you may need to restart this process.\n`\n      );\n    });\n  } else {\n    log.withTimestamp(\n      `${chalk.red('Failed to start simulator:')}\n\n${msg}\n\n${chalk.red('Exiting...')}`\n    );\n    process.exit(0);\n  }\n}\n"]}