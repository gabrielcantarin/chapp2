{"version":3,"sources":["detach/IosKeychain.js"],"names":["async","appUUID","saveResultToFile","BUILD_PHASE","logger","_logger","withFields","buildPhase","spawn","createSpawner","name","uuidv1","password","path","getKeychainPath","info","await","runFastlane","stdoutOnly","keychainInfoPath","getKeychainInfoPath","keychainInfo","fs","writeFile","JSON","stringify","createKeychain","remove","deleteKeychain","keychainPath","certPath","certPassword","args","push","importIntoKeychain","fastlaneArgs","fastlaneEnvVars","FASTLANE_DISABLE_COLORS","FASTLANE_SKIP_UPDATE_CHECK","CI","LC_ALL","spawnAsyncThrowError","env","process"],"mappings":"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","file":"../../detach/IosKeychain.js","sourcesContent":["import uuidv1 from 'uuid/v1';\nimport _ from 'lodash';\nimport fs from 'fs-extra';\n\nimport _logger from './Logger';\nimport { spawnAsyncThrowError, createSpawner } from './ExponentTools';\n\nexport async function createKeychain(appUUID, saveResultToFile = true) {\n  const BUILD_PHASE = 'creating keychain';\n  const logger = _logger.withFields({ buildPhase: BUILD_PHASE });\n  const spawn = createSpawner(BUILD_PHASE, logger);\n\n  const name = uuidv1();\n  const password = uuidv1();\n  const path = getKeychainPath(name);\n\n  logger.info('creating new keychain...');\n  await runFastlane([\n    'run',\n    'create_keychain',\n    `path:${path}`,\n    `password:${password}`,\n    'unlock:true',\n    'timeout:360000',\n  ]);\n  await spawn('security', 'show-keychain-info', path, { stdoutOnly: true });\n\n  logger.info('created new keychain');\n  const keychainInfoPath = getKeychainInfoPath(appUUID);\n  const keychainInfo = {\n    name,\n    path,\n    password,\n  };\n\n  if (saveResultToFile) {\n    await fs.writeFile(keychainInfoPath, JSON.stringify(keychainInfo));\n    logger.info('saved keychain info to %s', keychainInfoPath);\n  }\n\n  return keychainInfo;\n}\n\nexport async function deleteKeychain({ path, appUUID }) {\n  const BUILD_PHASE = 'deleting keychain';\n  const logger = _logger.withFields({ buildPhase: BUILD_PHASE });\n\n  logger.info('deleting keychain...');\n  await runFastlane(['run', 'delete_keychain', `keychain_path:${path}`]);\n\n  const keychainInfoPath = getKeychainInfoPath(appUUID);\n  await fs.remove(keychainInfoPath);\n}\n\nexport async function importIntoKeychain({ keychainPath, certPath, certPassword }) {\n  const BUILD_PHASE = 'importing certificate into keychain';\n  const logger = _logger.withFields({ buildPhase: BUILD_PHASE });\n  const spawn = createSpawner(BUILD_PHASE);\n\n  logger.info('importing certificate into keychain...');\n  const args = ['import', certPath, '-A', '-k', keychainPath, '-f', 'pkcs12'];\n  if (certPassword) {\n    logger.info('certificate has password');\n    args.push('-P', certPassword);\n  } else {\n    logger.info(\"certificate doesn't have password\");\n  }\n  await spawn('security', ...args);\n  logger.info('imported certificate into keychain');\n}\n\nasync function runFastlane(fastlaneArgs) {\n  const fastlaneEnvVars = {\n    FASTLANE_DISABLE_COLORS: 1,\n    FASTLANE_SKIP_UPDATE_CHECK: 1,\n    CI: 1,\n    LC_ALL: 'en_US.UTF-8',\n  };\n  await spawnAsyncThrowError('fastlane', fastlaneArgs, {\n    env: { ...process.env, ...fastlaneEnvVars },\n  });\n}\n\nconst getKeychainPath = name => `/private/tmp/xdl/${name}.keychain`;\nconst getKeychainInfoPath = appUUID => `/private/tmp/${appUUID}-keychain-info.json`;\n"],"sourceRoot":"/xdl@50.5.0/src"}